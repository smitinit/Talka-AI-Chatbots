  <div className="space-y-6">
            <div className="flex justify-between items-center">
              <SectionHeader
                flag
                title="Personality Overview"
                subtitle="Define your bot's personality and conversation style."
              />
              <div className="flex gap-4">
                <Button>
                  <Wand2 className="h-8 w-8" />
                  Fill with AI
                </Button>
                <Button>
                  <Rocket className="h-8 w-8" />
                  Explore Templates
                </Button>
              </div>
            </div>
            {/* Thesis */}
            <FormField
              control={form.control}
              name="botthesis"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Bot Thesis</FormLabel>
                  <FormControl>
                    <Textarea
                      placeholder="Describe your bot's philosophy, goal or mission..."
                      className="min-h-[100px] resize-none"
                      {...field}
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
            {/* Default Greeting */}
            <FormField
              control={form.control}
              name="greeting"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Default Greeting</FormLabel>
                  <FormControl>
                    <Textarea
                      placeholder="How should your bot introduce itself?"
                      className="min-h-[80px] resize-none"
                      {...field}
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />

            {/* Fallback Response */}
            <FormField
              control={form.control}
              name="fallback"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Fallback Response</FormLabel>
                  <FormControl>
                    <Textarea
                      placeholder="What should your bot say when it doesn't know the answer?"
                      className="min-h-[80px] resize-none"
                      {...field}
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
          <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
            {/* Tone */}
            <FormField
              control={form.control}
              name="tone"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Conversation Tone</FormLabel>
                  <FormControl>
                    <Select
                      onValueChange={field.onChange}
                      defaultValue={field.value}
                    >
                      <SelectTrigger>
                        <SelectValue placeholder="Select tone" />
                      </SelectTrigger>
                      <SelectContent>
                        {toneOptions.map((tone) => (
                          <SelectItem key={tone} value={tone}>
                            {tone}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />

            {/* Proactiveness */}
            <FormField
              control={form.control}
              name="proactiveness"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Proactiveness</FormLabel>
                  <FormControl>
                    <Select
                      onValueChange={field.onChange}
                      defaultValue={field.value}
                    >
                      <SelectTrigger>
                        <SelectValue placeholder="Select proactiveness" />
                      </SelectTrigger>
                      <SelectContent>
                        {proactivenessOptions.map((opt) => (
                          <SelectItem key={opt} value={opt}>
                            {opt}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />

            {/* Response Length */}
            <FormField
              control={form.control}
              name="responseLength"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Response Length</FormLabel>
                  <FormControl>
                    <Select
                      onValueChange={field.onChange}
                      defaultValue={field.value}
                    >
                      <SelectTrigger>
                        <SelectValue placeholder="Select response length" />
                      </SelectTrigger>
                      <SelectContent>
                        {responseLengthOptions.map((opt) => (
                          <SelectItem key={opt} value={opt}>
                            {opt}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
          <div className="space-y-6">
            <SectionHeader
              title="Expertise & Knowledge"
              subtitle="Specify what your bot knows best."
            />

            <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
              {/* Expertise */}
              <FormField
                control={form.control}
                name="expertise"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Area of Expertise</FormLabel>
                    <FormControl>
                      <Select
                        onValueChange={field.onChange}
                        defaultValue={field.value}
                      >
                        <SelectTrigger>
                          <SelectValue placeholder="Select expertise" />
                        </SelectTrigger>
                        <SelectContent>
                          {expertiseOptions.map((area) => (
                            <SelectItem key={area} value={area}>
                              {area}
                            </SelectItem>
                          ))}
                        </SelectContent>
                      </Select>
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />

              {/* Custom Expertise */}
              {watchExpertise === "custom" && (
                <FormField
                  control={form.control}
                  name="customexpertise"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Custom Expertise</FormLabel>
                      <FormControl>
                        <Input placeholder="Enter a unique domain" {...field} />
                      </FormControl>
                      <FormDescription>
                        Only fill if Custom is selected above.
                      </FormDescription>
                      <FormMessage />
                    </FormItem>
                  )}
                />
              )}
            </div>
          </div>
          <div className="space-y-6">
            <SectionHeader
              title="Data Sources & Search"
              subtitle="Configure how your bot accesses information."
            />

            <div className="grid grid-cols-1 items-start gap-6 md:grid-cols-2">
              {/* Web Search */}
              <FormField
                control={form.control}
                name="useWebSearch"
                render={({ field }) => (
                  <FormItem className="flex items-center justify-between pt-2">
                    <div className="space-y-0.5">
                      <FormLabel>Web Search</FormLabel>
                      <FormDescription>
                        Allow your bot to search the web for information
                      </FormDescription>
                    </div>
                    <FormControl>
                      <Switch
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                  </FormItem>
                )}
              />

              {/* Use Custom Docs */}
              <FormField
                control={form.control}
                name="useDocs"
                render={({ field }) => (
                  <FormItem className="flex items-center justify-between pt-2">
                    <div className="space-y-0.5">
                      <FormLabel>Custom Documents</FormLabel>
                      <FormDescription>
                        Train your bot on your own documents
                      </FormDescription>
                    </div>
                    <FormControl>
                      <Switch
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                  </FormItem>
                )}
              />
              {watchUpload && (
                <div className="mt-4 rounded-md border border-dashed border-gray-300 p-4 md:col-span-2">
                  <div className="flex flex-col items-center gap-2 text-center">
                    <Upload className="h-8 w-8 text-gray-400" />
                    <p className="text-sm font-medium">
                      Drag & drop files or click to upload
                    </p>
                    <p className="text-muted-foreground text-xs">
                      Supports PDF, TXT, DOCX, and Markdown files (Max 10MB)
                    </p>
                    <Button
                      type="button"
                      variant="outline"
                      size="sm"
                      className="mt-2"
                    >
                      Select Files
                    </Button>
                  </div>
                </div>
              )}
            </div>

            {/* Site URL */}
            <FormField
              control={form.control}
              name="siteUrl"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Site URL</FormLabel>
                  <FormControl>
                    <Input
                      placeholder="https://your-documentation-site.com"
                      {...field}
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />

            {/* Focus Domains */}
            <FormField
              control={form.control}
              name="focusDomains"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Focus Domains</FormLabel>
                  <FormControl>
                    <Textarea
                      placeholder="E.g., Machine Learning, Web Development, Data Science"
                      className="max-h-[150px] min-h-[80px] resize-none"
                      {...field}
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>

          <div className="space-y-6">
            <SectionHeader
              title="Memory & Learning"
              subtitle="Configure how your bot remembers conversations."
            />

            <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
              {/* Memory Type */}
              <FormField
                control={form.control}
                name="memoryType"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Bot Memory Type</FormLabel>
                    <FormControl>
                      <Select
                        onValueChange={field.onChange}
                        defaultValue={field.value}
                      >
                        <SelectTrigger>
                          <SelectValue placeholder="Select memory type" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="per-user">
                            Per User (Individual Memories)
                          </SelectItem>
                          <SelectItem value="global">
                            Global (Shared Memory)
                          </SelectItem>
                          <SelectItem value="session-only">
                            Session Only (Temporary)
                          </SelectItem>
                        </SelectContent>
                      </Select>
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />

              {/* Memory Expiration */}
              <FormField
                control={form.control}
                name="memoryExpiration"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Memory Expiration Control</FormLabel>
                    <FormControl>
                      <Select
                        onValueChange={field.onChange}
                        defaultValue={field.value}
                      >
                        <SelectTrigger>
                          <SelectValue placeholder="Select memory expiration" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="session">Session Only</SelectItem>
                          <SelectItem value="24h">24 Hours</SelectItem>
                          <SelectItem value="7d">7 Days</SelectItem>
                          <SelectItem value="30d">30 Days</SelectItem>
                          <SelectItem value="perm">Permanent</SelectItem>
                        </SelectContent>
                      </Select>
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />
            </div>
          </div>
          <div className="space-y-6">
            <SectionHeader
              title="Behavior & Creativity"
              subtitle="Control how creative and humorous the bot is."
            />

            <div className="grid grid-cols-1 items-start gap-6 md:grid-cols-2">
              {/* Creativity */}
              <FormField
                control={form.control}
                name="creativity"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>Creativity Level</FormLabel>
                    <FormControl>
                      <div className="pt-2">
                        <Slider
                          min={0}
                          max={1}
                          step={0.01}
                          defaultValue={[field.value || 0.5]}
                          onValueChange={(val) => field.onChange(val[0])}
                        />
                      </div>
                    </FormControl>
                    <FormDescription>
                      {Math.round((field.value || 0.5) * 100)}%
                    </FormDescription>
                    <FormMessage />
                  </FormItem>
                )}
              />

              {/* Humor */}
              <FormField
                control={form.control}
                name="humorMode"
                render={({ field }) => (
                  <FormItem className="flex items-center justify-between pt-2">
                    <div className="space-y-0.5">
                      <FormLabel>Enable Humor</FormLabel>
                      <FormDescription>
                        Let the bot make jokes and add wit occasionally.
                      </FormDescription>
                    </div>
                    <FormControl>
                      <Switch
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                  </FormItem>
                )}
              />
            </div>
          </div>

          <div className="flex justify-end border-t pt-6">
            <Button type="submit" className="px-3" disabled={pending}>
              {pending ? (
                <div className="flex gap-2">
                  <span>Saving...</span>
                  {/* <Spinner /> */}
                </div>
              ) : (
                "Save"
              )}
            </Button>
          </div>